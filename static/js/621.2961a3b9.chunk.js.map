{"version":3,"file":"static/js/621.2961a3b9.chunk.js","mappings":"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","sources":["components/ContactsLayout.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactItem/ContactItem.styled.js","components/ContactList/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 360px;\n  gap: 24px;\n`;\nexport const Layout = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  background-color: #f4f4fd;\n  border-radius: 5px;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n  overflow: hidden;\n  margin: 0 auto ;\n  padding: 20px;\n`;\n","import styled from 'styled-components';\nimport { Form, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  max-width: 300px;\n  gap: 12px;\n`;\n\nexport const ErrMessage = styled(ErrorMessage)`\n  font-size: 14px;\n  color: red;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  text-transform: capitalize;\n\n  background-color: #0a66c2;\n  border: 0;\n  border-radius: 25px;\n  color: #ffffff;\n  font-size: 14px;\n  padding: 5px 5px;\n  width: 100px;\n\n  &:hover {\n    background-color: #16437e;\n  }\n`;\n\nexport const StyledLabel = styled.label`\n  font-size: 16px;\n  font-weight: 600;\n  \n`;\n","import { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Button,\n  ErrMessage,\n  StyledForm,\n  StyledLabel,\n} from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/fetchingData';\nimport { selectContacts } from 'redux/selectors';\n\nconst formSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'To short')\n    .max(15, 'To long')\n    .required('* This field required'),\n  number: Yup.number().required('* This field required'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = objContact => {\n    if (contacts.some(contact => contact.name === objContact.name)) {\n      alert(`${objContact.name} is already in the phone book`);\n      return;\n    }\n    return dispatch(addContact(objContact));\n  };\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={formSchema}\n      onSubmit={(values, actions) => {\n        handleSubmit(values);\n        actions.resetForm();\n      }}\n    >\n      <StyledForm>\n        <StyledLabel htmlFor=\"name\">Name</StyledLabel>\n        <Field type=\"text\" name=\"name\" placeholder=\"Enter name...\"></Field>\n        <ErrMessage component=\"span\" name=\"name\" />\n\n        <StyledLabel htmlFor=\"name\">Phone</StyledLabel>\n        <Field\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter phone number...\"\n        ></Field>\n        <ErrMessage component=\"span\" name=\"number\" />\n\n        <Button type=\"submit\">Add contact</Button>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  width: 100%;\n  font-size: 14px;\n  font-weight: 500;\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 10px;\n  color: #16437e;\n  position: relative;\n`;\nexport const DeleteButton = styled.button`\n  display: block;\n  background-color: #0a66c2;\n  border: 0;\n  border-radius: 50%;\n  color: #ffffff;\n  width: 18px;\n  height: 18px;\n  padding: 0;\n  position: absolute;\n\n  top: 0px;\n  right: 0;\n\n  &:hover {\n    background-color: #16437e;\n  }\n`;\nexport const Number = styled.span`\n  margin-right: 30px;\n  letter-spacing: 1px;\n  font-family: sans-serif;\n`;\n","import { DeleteButton, ListItem, Number } from './ContactItem.styled';\nimport { AiFillCloseCircle } from 'react-icons/ai';\nimport { deleteContact } from 'redux/fetchingData';\nimport { useDispatch} from 'react-redux';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  \n  const onDelete = contactId => {\n    return dispatch(\n      deleteContact(contactId)\n    );\n  };\n  return (\n    <ListItem>\n      <p>{name} :</p>\n      <Number>{number}</Number>\n      <DeleteButton onClick={() => onDelete(id)}>\n        <AiFillCloseCircle size={18} />\n      </DeleteButton>\n    </ListItem>\n  );\n};\n","import React, { useEffect } from 'react';\nimport Notiflix from 'notiflix';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { ContactItem } from './ContactItem/ContactItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/fetchingData';\nimport { selectVisibleContacts } from 'redux/selectors';\n\nexport const ContactList = () => {\n  const { isLoading, error } = useSelector(state => state.contacts);\n  const getfilteredContacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  if (error) {\n    Notiflix.Notify.failure(error);\n  }\n\n  return (\n    <>\n      <ul>\n        {getfilteredContacts.map(({ name, number, id }) => (\n          <ContactItem key={id} id={id} name={name} number={number} />\n        ))}\n      </ul>\n      <ThreeDots\n        height=\"40\"\n        width=\"40\"\n        radius=\"9\"\n        color=\"#16437e\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={isLoading}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  font-size: 16px;\n  font-weight: 600;\n`;\n","import React from 'react';\nimport { Label } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { setFilterValue } from 'redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  return (\n    <>\n      <Label htmlFor=\"filter\">Find contacts by name</Label>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        onChange={evt => {\n          dispatch(setFilterValue(evt.target.value));\n        }}\n        placeholder=\"Filter by name...\"\n      />\n    </>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Layout, Wrapper } from 'components/ContactsLayout';\n\nexport default function Contacts() {\n  return (\n    <Layout>\n      <Wrapper>\n        <h1>Phonebook</h1>\n        <ContactForm />\n      </Wrapper>\n      <Wrapper>\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </Wrapper>\n    </Layout>\n  );\n};\n"],"names":["Wrapper","styled","Layout","StyledForm","Form","ErrMessage","ErrorMessage","Button","StyledLabel","formSchema","Yup","shape","name","min","max","required","number","ContactForm","dispatch","useDispatch","contacts","useSelector","selectContacts","initialValues","validationSchema","onSubmit","values","actions","objContact","some","contact","addContact","alert","handleSubmit","resetForm","htmlFor","type","placeholder","component","ListItem","DeleteButton","Number","ContactItem","id","onClick","contactId","deleteContact","size","ContactList","state","isLoading","error","getfilteredContacts","selectVisibleContacts","useEffect","fetchContacts","Notiflix","map","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","Label","Filter","onChange","evt","setFilterValue","target","value","Contacts"],"sourceRoot":""}