{"version":3,"file":"static/js/236.70527dc3.chunk.js","mappings":"yNAEaA,EAAUC,EAAAA,GAAAA,IAAH,oGAMPC,EAASD,EAAAA,GAAAA,IAAH,0O,yKCLNE,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,wGAOVI,GAAaJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,2DAKVM,EAASN,EAAAA,GAAAA,OAAH,iRAiBNO,EAAcP,EAAAA,GAAAA,MAAH,oE,6IC1BlBQ,EAAqBC,EAAAA,KAAaC,MAAM,CAC5CC,KAAMF,EAAAA,KACHG,IAAI,EAAG,YACPC,IAAI,GAAI,WACRC,SAAS,yBACZC,MAAON,EAAAA,KAAaM,MAAM,8BAA8BD,SAAS,YACjEE,SAAUP,EAAAA,KACPG,IAAI,EAAG,sDACPK,QAAQ,WAAY,4CACpBH,SAAS,2BAGDI,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,SAAC,KAAD,CACEC,cAAe,CACbV,KAAM,GACNI,MAAO,GACPC,SAAU,IAEZM,iBAAkBd,EAClBe,SAAU,SAACC,EAAQC,GAZF,IAAAC,IAaFF,EAZVL,GAASQ,EAAAA,EAAAA,IAASD,IAarBD,EAAQG,WACT,EAVH,UAYE,UAAC,KAAD,YACE,SAAC,KAAD,CAAaC,QAAQ,OAArB,SAA4B,cAC5B,SAAC,KAAD,CAAOC,KAAK,OAAOnB,KAAK,OAAOoB,YAAY,oBAC3C,SAAC,KAAD,CAAYC,UAAU,OAAOrB,KAAK,UAElC,SAAC,KAAD,CAAakB,QAAQ,QAArB,SAA6B,WAC7B,SAAC,KAAD,CAAOC,KAAK,QAAQnB,KAAK,QAAQoB,YAAY,iBAC7C,SAAC,KAAD,CAAYC,UAAU,OAAOrB,KAAK,WAElC,SAAC,KAAD,CAAakB,QAAQ,WAArB,SAAgC,cAChC,SAAC,KAAD,CACEC,KAAK,WACLnB,KAAK,WACLoB,YAAY,oBAEd,SAAC,KAAD,CAAYC,UAAU,OAAOrB,KAAK,cAElC,SAAC,KAAD,CAAQmB,KAAK,SAAb,SAAsB,eAI7B,ECxDc,SAASG,IACtB,OACE,SAAC,IAAD,WACE,SAACf,EAAD,KAGL,C","sources":["components/ContactsLayout.js","components/LoginForm/LoginForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 360px;\n  gap: 24px;\n`;\nexport const Layout = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  background-color: #f4f4fd;\n  border-radius: 5px;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n  overflow: hidden;\n  margin: 0 auto ;\n  padding: 20px;\n`;\n","import styled from 'styled-components';\nimport { Form, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  max-width: 300px;\n  gap: 12px;\n`;\n\nexport const ErrMessage = styled(ErrorMessage)`\n  font-size: 14px;\n  color: red;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  text-transform: capitalize;\n\n  background-color: #0a66c2;\n  border: 0;\n  border-radius: 25px;\n  color: #ffffff;\n  font-size: 14px;\n  padding: 5px 5px;\n  width: 100px;\n\n  &:hover {\n    background-color: #16437e;\n  }\n`;\n\nexport const StyledLabel = styled.label`\n  font-size: 16px;\n  font-weight: 600;\n  \n`;","import { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/fetchingAuth';\nimport { Button, ErrMessage, StyledForm, StyledLabel } from 'components/LoginForm/LoginForm.styled';\n\nconst registerFormSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'To short')\n    .max(15, 'To long')\n    .required('* Please enter a name'),\n  email: Yup.string().email('Please enter a valid email').required('Required'),\n  password: Yup.string()\n    .min(5, 'Password is too short - should be 5 chars minimum.')\n    .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.')\n    .required('No password provided.'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = objCredentials => {\n    return dispatch(register(objCredentials));\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        password: '',\n      }}\n      validationSchema={registerFormSchema}\n      onSubmit={(values, actions) => {\n        handleSubmit(values);\n        actions.resetForm();\n      }}\n    >\n      <StyledForm>\n        <StyledLabel htmlFor=\"name\">Username</StyledLabel>\n        <Field type=\"text\" name=\"name\" placeholder=\"Enter username\"></Field>\n        <ErrMessage component=\"span\" name=\"name\" />\n        \n        <StyledLabel htmlFor=\"email\">Email</StyledLabel>\n        <Field type=\"email\" name=\"email\" placeholder=\"Enter email\"></Field>\n        <ErrMessage component=\"span\" name=\"email\" />\n\n        <StyledLabel htmlFor=\"password\">Password</StyledLabel>\n        <Field\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Enter password\"\n        ></Field>\n        <ErrMessage component=\"span\" name=\"password\" />\n\n        <Button type=\"submit\">Log In</Button>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import { Layout } from 'components/ContactsLayout';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <Layout>\n      <RegisterForm />\n    </Layout>\n  );\n}\n"],"names":["Wrapper","styled","Layout","StyledForm","Form","ErrMessage","ErrorMessage","Button","StyledLabel","registerFormSchema","Yup","shape","name","min","max","required","email","password","matches","RegisterForm","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","actions","objCredentials","register","resetForm","htmlFor","type","placeholder","component","Register"],"sourceRoot":""}